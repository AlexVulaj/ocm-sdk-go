{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "job_queue",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "OCM Feedback",
      "email": "ocm-feedback@redhat.com"
    }
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.openshift.com"
    },
    {
      "description": "Stage",
      "url": "https://api.stage.openshift.com"
    }
  ],
  "paths": {
    "/api/job_queue/v1": {
      "get": {
        "description": "Retrieves the version metadata.\n",
        "responses": {
          "200": {
            "description": "Success.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues": {
      "get": {
        "description": "Retrieves a list of job queues.\n",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.\nPage may be a token to the next page\n",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.\n",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of job queues.\n",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Queue"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.\nPage may be a token to the next page\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection regardless of the size of the page.\n",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues/{queue_id}": {
      "get": {
        "description": "Retrieves the details of a job queue by ID.\n",
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues/{queue_id}/pop": {
      "post": {
        "description": "POP new job from a job queue\n",
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues/{queue_id}/push": {
      "post": {
        "description": "PUSH a new job into job queue\n",
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues/{queue_id}/jobs/{job_id}/failure": {
      "post": {
        "description": "Mark a job as Failed. This method returns '204 No Content'\n",
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "failure_reason": {
                    "type": "string"
                  },
                  "receipt_id": {
                    "description": "A unique ID of a pop'ed job\n",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.\n"
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_queue/v1/queues/{queue_id}/jobs/{job_id}/success": {
      "post": {
        "description": "Mark a job as Successful. This method returns '204 No Content'\n",
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receipt_id": {
                    "description": "A unique ID of a pop'ed job\n",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.\n"
          },
          "default": {
            "description": "Error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Metadata": {
        "description": "Version metadata.\n",
        "properties": {
          "server_version": {
            "description": "Version of the server.\n",
            "type": "string"
          }
        }
      },
      "Job": {
        "description": "This struct is a job in a Job Queue.\n",
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Job' if this is a complete object or 'JobLink' if it is just a link.\n",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.\n",
            "type": "string"
          },
          "href": {
            "description": "Self link.\n",
            "type": "string"
          },
          "abandoned_at": {
            "description": "DLQ sent timestamp\n",
            "type": "string",
            "format": "date-time"
          },
          "arguments": {
            "description": "Arguments to run Job with.\n",
            "type": "string"
          },
          "attempts": {
            "description": "Number of retries.\n",
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "receipt_id": {
            "description": "Each time a specific job is pop'd, the receiptId will change, while the ID stays the same.\n",
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Queue": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Queue' if this is a complete object or 'QueueLink' if it is just a link.\n",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.\n",
            "type": "string"
          },
          "href": {
            "description": "Self link.\n",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "max_attempts": {
            "description": "SQS Visibility Timeout\n",
            "type": "integer",
            "format": "int32"
          },
          "max_run_time": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will always be 'Error'\n",
            "type": "string"
          },
          "id": {
            "description": "Numeric identifier of the error.\n",
            "type": "integer",
            "format": "int32"
          },
          "href": {
            "description": "Self link.\n",
            "type": "string"
          },
          "code": {
            "description": "Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, for if the numeric identifier of the error is `93` and the identifier of the API is `clusters_mgmt` then the code will be `CLUSTERS-MGMT-93`.\n",
            "type": "string"
          },
          "reason": {
            "description": "Human readable description of the error.\n",
            "type": "string"
          },
          "details": {
            "description": "Extra information about the error.\n",
            "type": "object",
            "additionalProperties": "true"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearer": [
        
      ]
    }
  ]
}